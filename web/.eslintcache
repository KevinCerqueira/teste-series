[{"C:\\Users\\paulolima\\Documents\\GitHub\\exercicio-front-react\\front-app\\src\\index.js":"1","C:\\Users\\paulolima\\Documents\\GitHub\\exercicio-front-react\\front-app\\src\\App.jsx":"2","C:\\Users\\paulolima\\Documents\\GitHub\\exercicio-front-react\\front-app\\src\\routes.jsx":"3","C:\\Users\\paulolima\\Documents\\GitHub\\exercicio-front-react\\front-app\\src\\pages\\Home\\index.jsx":"4","C:\\Users\\paulolima\\documents\\github\\teste-series\\web\\src\\index.js":"5","C:\\Users\\paulolima\\documents\\github\\teste-series\\web\\src\\App.jsx":"6","C:\\Users\\paulolima\\documents\\github\\teste-series\\web\\src\\routes.jsx":"7","C:\\Users\\paulolima\\documents\\github\\teste-series\\web\\src\\pages\\Home\\index.jsx":"8","C:\\Users\\paulolima\\documents\\github\\teste-series\\web\\src\\pages\\components\\NovaSerie.jsx":"9","C:\\Users\\paulolima\\documents\\github\\teste-series\\web\\src\\pages\\components\\EditarSerie.jsx":"10","C:\\Users\\paulolima\\documents\\github\\teste-series\\web\\src\\pages\\components\\SerieContainer.jsx":"11"},{"size":261,"mtime":1608142680394,"results":"12","hashOfConfig":"13"},{"size":150,"mtime":1608141281311,"results":"14","hashOfConfig":"13"},{"size":309,"mtime":1608141534876,"results":"15","hashOfConfig":"13"},{"size":10999,"mtime":1608232649600,"results":"16","hashOfConfig":"13"},{"size":305,"mtime":1612361235173,"results":"17","hashOfConfig":"18"},{"size":150,"mtime":1608141281311,"results":"19","hashOfConfig":"18"},{"size":309,"mtime":1608141534876,"results":"20","hashOfConfig":"18"},{"size":1631,"mtime":1612353937537,"results":"21","hashOfConfig":"18"},{"size":5644,"mtime":1612356117946,"results":"22","hashOfConfig":"18"},{"size":5690,"mtime":1612355326177,"results":"23","hashOfConfig":"18"},{"size":3642,"mtime":1612356017546,"results":"24","hashOfConfig":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"vyclha",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g5unky",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"C:\\Users\\paulolima\\Documents\\GitHub\\exercicio-front-react\\front-app\\src\\index.js",[],["50","51"],"C:\\Users\\paulolima\\Documents\\GitHub\\exercicio-front-react\\front-app\\src\\App.jsx",[],"C:\\Users\\paulolima\\Documents\\GitHub\\exercicio-front-react\\front-app\\src\\routes.jsx",[],"C:\\Users\\paulolima\\Documents\\GitHub\\exercicio-front-react\\front-app\\src\\pages\\Home\\index.jsx",["52","53","54"],"import React, { useEffect, useState, FormEvent, ChangeEvent } from 'react';\r\nimport axios from 'axios';\r\nimport './styles.css';\r\n\r\nconst Home = () => {\r\n    const [clinicas, setClinicas] = useState([]);\r\n    const [servicos, setServicos] = useState([]);\r\n    const [ordenamento, setOrdenamento] = useState({\r\n        nome: 'nome',\r\n        tipo: 'asc'\r\n    });\r\n    const [formData, setFormData] = useState({\r\n        nome: '',\r\n        email: '',\r\n        whatsapp: '',\r\n        logradouro: '',\r\n        cep: '',\r\n    });\r\n    const [selectedServicos, setSelectedServicos] = useState([]);\r\n    useEffect(() => {\r\n        async function getClinicas() {\r\n            try {\r\n                const { data } = await axios.get(localStorage.getItem('@server/link') + \"/clinicas/\"+ordenamento.nome+\"/\"+ordenamento.tipo);\r\n                setClinicas(data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        getClinicas();\r\n    });\r\n    useEffect(() => {\r\n        async function getServicos() {\r\n            try {\r\n                const { data } = await axios.get(localStorage.getItem('@server/link') + \"/servicos\");\r\n                setServicos(data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        getServicos();\r\n    });\r\n    function handleSelectServico(id) {\r\n        const alreadySelected = selectedServicos.findIndex(servico => servico == id);\r\n\r\n        if (alreadySelected >= 0) {\r\n            const filteredServicos = selectedServicos.filter(servico => servico !== id);\r\n            setSelectedServicos(filteredServicos);\r\n        } else {\r\n            setSelectedServicos([...selectedServicos, id]);\r\n        }\r\n    }\r\n    function handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n\r\n        setFormData({ ...formData, [name]: value });\r\n    }\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n        const { nome, logradouro, cep, email, whatsapp } = formData;\r\n        const servicos_input = selectedServicos;\r\n        const data = {\r\n            nome,\r\n            logradouro,\r\n            cep,\r\n            email,\r\n            whatsapp,\r\n            servicos_input\r\n        };\r\n        const res = await axios.post(localStorage.getItem('@server/link') + \"/createClinica\", data);\r\n        console.log(res);\r\n        return window.location.reload();\r\n    }\r\n    function handleOrdernamentoSet(event) {\r\n        const { name, value } = event.target;\r\n\r\n        setOrdenamento({ nome: name, tipo: value });\r\n        return;\r\n    }\r\n    return (\r\n        <div id=\"navbar\">\r\n            <nav className=\"p-2 text-center shadow\">\r\n                <span className=\"mb-0 h2 text-white text-center\">\r\n                    Visualizador de Clínicas\r\n                </span>\r\n            </nav>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2 p-0 m-0 float-right\">\r\n                        <button id=\"btn-novaclinica\" type=\"button\" className=\"btn\" data-toggle=\"modal\" data-target=\"#novaClinicaModal\">\r\n                            <strong>Nova Clínica <i className=\"fas fa-plus-circle\"></i></strong>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-md-2 p-0 m-0\">\r\n                        <select name=\"nome\" class=\"form-control \" onChange={handleOrdernamentoSet}>\r\n                            <option value=\"asc\">NOME CRE</option>\r\n                            <option value=\"desc\">NOME DEC</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div id=\"novaclinica\">\r\n                    <div className=\"modal fade\" id=\"novaClinicaModal\" tabIndex=\"-1\" aria-labelledby=\"novaClinicaModalLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog modal-lg modal-dialog-centered\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <legend>\r\n                                        <h2>Nova Clínica</h2>\r\n                                    </legend>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <form id=\"form-novaclinica\" onSubmit={handleSubmit}>\r\n                                    <div className=\"modal-body\">\r\n                                        <fieldset>\r\n                                            <div className=\"field\">\r\n                                                <label htmlFor=\"form-nome\">Nome</label>\r\n                                                <input required type=\"text\" id=\"form-nome\" name=\"nome\" onChange={handleInputChange} />\r\n                                            </div>\r\n                                            <div className=\"field-group\">\r\n                                                <div className=\"field\">\r\n                                                    <label htmlFor=\"form-endereco\">Endereço</label>\r\n                                                    <input required type=\"text\" name=\"logradouro\" id=\"form-endereco\" onChange={handleInputChange} />\r\n                                                </div>\r\n                                                <div className=\"field\">\r\n                                                    <label htmlFor=\"cep\">CEP</label>\r\n                                                    <input required maxLength={9} type=\"text\" name=\"cep\" id=\"form-cep\" onChange={handleInputChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"field-group\">\r\n                                                <div className=\"field\">\r\n                                                    <label htmlFor=\"form-email\">E-mail</label>\r\n                                                    <input required type=\"email\" name=\"email\" id=\"form-email\" onChange={handleInputChange} />\r\n                                                </div>\r\n                                                <div className=\"field\">\r\n                                                    <label htmlFor=\"form-whatsapp\">Whatsapp</label>\r\n                                                    <input required type=\"text\" name=\"whatsapp\" id=\"form-whatsapp\" onChange={handleInputChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </fieldset>\r\n                                        <fieldset>\r\n                                            <legend>\r\n                                                <h2>Serviços</h2>\r\n                                                <span>Selecione um ou mais serviços abaixo</span>\r\n                                            </legend>\r\n\r\n                                            <ul className=\"items-grid\">\r\n                                                {servicos.map((servico) => (\r\n                                                    <li className={selectedServicos.includes(servico.idservico) ? 'selected' : ''} key={servico.idservico} onClick={() => handleSelectServico(servico.idservico)} >\r\n                                                        {/* <img src={item.image_url} alt={item.title} /> */}\r\n                                                        <span>{servico.nome}</span>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </fieldset>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"submit\">Adicionar</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {clinicas.map((clinica) => (\r\n                    <div key={clinica.idclinica} className=\"bg-white card-content row mt-3 sup-center\">\r\n                        <div className=\"etiqueta\"><strong>CLÍNICA</strong></div>\r\n                        <div className=\"col-md-7 pb-0 pt-0 pl-1 pr-1\">\r\n                            <p className=\"h4 mb-1 nome-clinica\"><strong>{clinica.nome}</strong></p>\r\n                            <span className=\"mr-3 p-1 cep\">{clinica.cep}</span>\r\n                            <span className=\"ml-3 p-1 email\">{clinica.email}</span>\r\n                            {/* <p className=\"h5 mb-1\"><strong>{clinica.logradouro}</strong></p> */}\r\n                        </div>\r\n                        <div className=\"col-md-2 p-1\">\r\n                            {\r\n                                servicos.map((servico) => (\r\n                                    <div key={servico.idservico}>\r\n                                        {\r\n                                            clinica.servicos.includes(servico.idservico) ?\r\n                                                <div className=\"servicos text-center p-1 color-selected mb-1 mt-1\">\r\n                                                    <p className=\"mb-0 text-uppercase font-weight-light\">\r\n                                                        <strong>{servico.nome}</strong>\r\n                                                    </p>\r\n                                                </div> :\r\n                                                <div className=\"servicos text-center p-1 bg-white border mb-1 mt-1\">\r\n                                                    <p className=\"mb-0 text-uppercase font-weight-light\">\r\n                                                        <strong>{servico.nome}</strong>\r\n                                                    </p>\r\n                                                </div>\r\n                                        }\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-md-2 text-center p-2 sup-center\">\r\n                            <div className=\"card-whatsapp p-3\">\r\n                                <i className=\"fab fa-whatsapp mr-2\"></i>\r\n                            WhatsApp\r\n                            <p className=\"h5 mb-0\">{clinica.whatsapp}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","C:\\Users\\paulolima\\documents\\github\\teste-series\\web\\src\\index.js",[],"C:\\Users\\paulolima\\documents\\github\\teste-series\\web\\src\\App.jsx",[],["55","56"],"C:\\Users\\paulolima\\documents\\github\\teste-series\\web\\src\\routes.jsx",[],"C:\\Users\\paulolima\\documents\\github\\teste-series\\web\\src\\pages\\Home\\index.jsx",[],"C:\\Users\\paulolima\\documents\\github\\teste-series\\web\\src\\pages\\components\\NovaSerie.jsx",[],"C:\\Users\\paulolima\\documents\\github\\teste-series\\web\\src\\pages\\components\\EditarSerie.jsx",[],"C:\\Users\\paulolima\\documents\\github\\teste-series\\web\\src\\pages\\components\\SerieContainer.jsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":38,"nodeType":"63","messageId":"64","endLine":1,"endColumn":47},{"ruleId":"61","severity":1,"message":"65","line":1,"column":49,"nodeType":"63","messageId":"64","endLine":1,"endColumn":60},{"ruleId":"66","severity":1,"message":"67","line":43,"column":79,"nodeType":"68","messageId":"69","endLine":43,"endColumn":81},{"ruleId":"57","replacedBy":"70"},{"ruleId":"59","replacedBy":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'FormEvent' is defined but never used.","Identifier","unusedVar","'ChangeEvent' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["72"],["73"],"no-global-assign","no-unsafe-negation"]